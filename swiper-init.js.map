{"version":3,"file":"swiper-init.js","mappings":"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","sources":["webpack://otus-blog/./src/lib/swiper/swiper.js","webpack://otus-blog/./src/js/swiper-init.js"],"sourcesContent":["/* eslint no-restricted-syntax: [\"off\", \"ForOfStatement\"] */\nfunction Swiper(swiperContainer, options = null) {\n  if (typeof swiperContainer === \"string\") {\n    const elements = document.querySelectorAll(swiperContainer);\n\n    if (elements.length > 1) {\n      return [...elements].map((e) => new Swiper(e, options));\n    }\n\n    if (elements.length === 1) {\n      return new Swiper(elements[0], options);\n    }\n\n    throw new Error(\"Invalid selector\");\n  } else if (\n    swiperContainer instanceof HTMLElement &&\n    swiperContainer.classList.contains(\"swiper\")\n  ) {\n    this.swiper = swiperContainer;\n  } else {\n    throw new Error(\"Invalid swiperContainer\");\n  }\n\n  this.swiperWrapper = this.swiper.querySelector(\".swiper__wrapper\");\n  this.swiperSlides = this.swiperWrapper.children;\n\n  this.btnPrev = this.swiper.querySelector(\"[data-slide='prev']\");\n  this.btnNext = this.swiper.querySelector(\"[data-slide='next']\");\n\n  this.btnPrevPressed = false;\n  this.btnNextPressed = false;\n\n  this.options = {\n    auto: options?.auto ?? false,\n    interval:\n      options?.interval && typeof options.interval === \"number\"\n        ? options.interval\n        : null,\n    reverse: options?.reverse ?? false,\n    speed:\n      options?.speed && typeof options.speed === \"number\" ? options.speed : 500,\n  };\n\n  this.nextActiveSlideIdx = null;\n\n  [...this.swiperSlides].forEach((s, i) => {\n    if (i === 0) {\n      s.classList.add(\"active\");\n    }\n\n    s.style.transitionDuration = `${this.options.speed}ms`; // eslint-disable-line no-param-reassign\n\n    s.addEventListener(\"transitionstart\", () => {\n      if (!s.classList.contains(\"active\")) {\n        return;\n      }\n\n      const lastSlideIdx = this.swiperSlides.length - 1;\n      const idx = [...this.swiperSlides].findIndex((ss) => ss === s);\n\n      if (this.btnPrevPressed) {\n        this.nextActiveSlideIdx = idx === 0 ? lastSlideIdx : idx - 1;\n        this.swiperSlides[this.nextActiveSlideIdx].classList.add(\n          \"swiper__slide_right\"\n        );\n      } else if (this.btnNextPressed) {\n        this.nextActiveSlideIdx = idx === lastSlideIdx ? 0 : idx + 1;\n        this.swiperSlides[this.nextActiveSlideIdx].classList.add(\n          \"swiper__slide_left\"\n        );\n      }\n    });\n\n    s.addEventListener(\"transitionend\", () => {\n      if (!s.classList.contains(\"active\")) {\n        return;\n      }\n\n      if (this.btnPrevPressed) {\n        s.classList.remove(\"active\", \"swiper__slide_right\");\n        this.swiperSlides[this.nextActiveSlideIdx].classList.add(\"active\");\n        this.swiperSlides[this.nextActiveSlideIdx].classList.remove(\n          \"swiper__slide_prev\",\n          \"swiper__slide_right\"\n        );\n\n        this.btnPrevPressed = false;\n      } else if (this.btnNextPressed) {\n        s.classList.remove(\"active\", \"swiper__slide_left\");\n        this.swiperSlides[this.nextActiveSlideIdx].classList.add(\"active\");\n        this.swiperSlides[this.nextActiveSlideIdx].classList.remove(\n          \"swiper__slide_next\",\n          \"swiper__slide_left\"\n        );\n\n        this.btnNextPressed = false;\n      }\n    });\n  });\n\n  this.btnPrev.onclick = this.slidePrev.bind(this);\n  this.btnNext.onclick = this.slideNext.bind(this);\n\n  if (this.options.auto && this.options.interval) {\n    setInterval(() => {\n      if (this.options.reverse) {\n        this.btnPrev.dispatchEvent(new Event(\"click\"));\n      } else {\n        this.btnNext.dispatchEvent(new Event(\"click\"));\n      }\n    }, this.options.interval);\n  }\n}\n\nSwiper.prototype.slidePrev = function slidePrev() {\n  if (\n    this.btnPrevPressed ||\n    this.btnNextPressed ||\n    this.swiperSlides.length <= 1\n  ) {\n    return;\n  }\n\n  this.btnPrevPressed = true;\n\n  const lastSlideIdx = this.swiperSlides.length - 1;\n\n  for (const [i, s] of Object.entries(this.swiperSlides)) {\n    if (s.classList.contains(\"active\")) {\n      const showedSlideIdx = +i === 0 ? lastSlideIdx : +i - 1;\n\n      this.swiperSlides[showedSlideIdx].classList.add(\"swiper__slide_prev\");\n      s.classList.add(\"swiper__slide_right\");\n\n      break;\n    }\n  }\n};\n\nSwiper.prototype.slideNext = function slideNext() {\n  if (\n    this.btnPrevPressed ||\n    this.btnNextPressed ||\n    this.swiperSlides.length <= 1\n  ) {\n    return;\n  }\n\n  this.btnNextPressed = true;\n\n  const lastSlideIdx = this.swiperSlides.length - 1;\n\n  for (const [i, s] of Object.entries(this.swiperSlides)) {\n    if (s.classList.contains(\"active\")) {\n      const showedSlideIdx = +i === lastSlideIdx ? 0 : +i + 1;\n\n      this.swiperSlides[showedSlideIdx].classList.add(\"swiper__slide_next\");\n      s.classList.add(\"swiper__slide_left\");\n\n      break;\n    }\n  }\n};\n\nexport default Swiper;\n","import \"../lib/swiper/swiper.less\";\nimport Swiper from \"../lib/swiper/swiper\";\n\n// eslint-disable-next-line no-unused-vars\nconst swiper = new Swiper(\".swiper\", {\n  auto: true,\n  interval: 2500,\n  speed: 800,\n});\n"],"names":["Swiper","swiperContainer","options","elements","document","querySelectorAll","length","map","e","Error","HTMLElement","classList","contains","this","swiper","swiperWrapper","querySelector","swiperSlides","children","btnPrev","btnNext","btnPrevPressed","btnNextPressed","auto","interval","reverse","speed","nextActiveSlideIdx","forEach","s","i","add","style","transitionDuration","addEventListener","lastSlideIdx","idx","findIndex","ss","remove","onclick","slidePrev","bind","slideNext","setInterval","dispatchEvent","Event","prototype","Object","entries","showedSlideIdx"],"sourceRoot":""}