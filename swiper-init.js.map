{"version":3,"file":"swiper-init.js","mappings":"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","sources":["webpack://otus-blog/./src/lib/swiper/swiper.js","webpack://otus-blog/./src/js/swiper-init.js"],"sourcesContent":["/* eslint no-restricted-syntax: [\"off\", \"ForOfStatement\"] */\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_ontransitionstart\", \"_ontransitionend\", \"_parseOptions\", \"_setAutoSlideTimeoutID\"] }] */\n\nfunction _ontransitionstart(target, context) {\n  if (!target.classList.contains(\"active\")) {\n    return;\n  }\n\n  const lastSlideIdx = context.swiperSlides.length - 1;\n  const idx = [...context.swiperSlides].findIndex((slide) => slide === target);\n\n  if (context.btnPrevPressed) {\n    context.nextActiveSlideIdx = idx === 0 ? lastSlideIdx : idx - 1;\n    context.swiperSlides[context.nextActiveSlideIdx].classList.add(\n      \"swiper__slide_right\"\n    );\n\n    return;\n  }\n\n  if (context.btnNextPressed) {\n    context.nextActiveSlideIdx = idx === lastSlideIdx ? 0 : idx + 1;\n    context.swiperSlides[context.nextActiveSlideIdx].classList.add(\n      \"swiper__slide_left\"\n    );\n  }\n}\n\nfunction _ontransitionend(target, context) {\n  if (!target.classList.contains(\"active\")) {\n    return;\n  }\n\n  if (context.btnPrevPressed) {\n    target.classList.remove(\"active\", \"swiper__slide_right\");\n    context.swiperSlides[context.nextActiveSlideIdx].classList.add(\"active\");\n    context.swiperSlides[context.nextActiveSlideIdx].classList.remove(\n      \"swiper__slide_prev\",\n      \"swiper__slide_right\"\n    );\n\n    context.btnPrevPressed = false;\n    return;\n  }\n\n  if (context.btnNextPressed) {\n    target.classList.remove(\"active\", \"swiper__slide_left\");\n    context.swiperSlides[context.nextActiveSlideIdx].classList.add(\"active\");\n    context.swiperSlides[context.nextActiveSlideIdx].classList.remove(\n      \"swiper__slide_next\",\n      \"swiper__slide_left\"\n    );\n\n    context.btnNextPressed = false;\n  }\n}\n\nfunction _parseOptions(options) {\n  return {\n    auto: options?.auto ?? false,\n    interval:\n      options?.interval && typeof options.interval === \"number\"\n        ? options.interval\n        : null,\n    reverse: options?.reverse ?? false,\n    speed:\n      options?.speed && typeof options.speed === \"number\" ? options.speed : 500,\n  };\n}\n\nfunction _setAutoSlideTimeoutID(context) {\n  if (!context.options.auto || !context.options.interval) {\n    return;\n  }\n\n  clearTimeout(context.autoSlideTimeoutID);\n\n  context.autoSlideTimeoutID = setTimeout(() => {\n    if (context.options.reverse) {\n      context.btnPrev.dispatchEvent(new Event(\"click\"));\n    } else {\n      context.btnNext.dispatchEvent(new Event(\"click\"));\n    }\n  }, context.options.interval);\n}\n\nfunction Swiper(swiperContainer, options = null) {\n  if (typeof swiperContainer === \"string\") {\n    const elements = document.querySelectorAll(swiperContainer);\n\n    if (elements.length > 1) {\n      return [...elements].map((e) => new Swiper(e, options));\n    }\n\n    if (elements.length === 1) {\n      return new Swiper(elements[0], options);\n    }\n\n    throw new Error(\"Invalid selector\");\n  } else if (\n    swiperContainer instanceof HTMLElement &&\n    swiperContainer.classList.contains(\"swiper\")\n  ) {\n    this.swiper = swiperContainer;\n  } else {\n    throw new Error(\"Invalid swiperContainer\");\n  }\n\n  this.swiperWrapper = this.swiper.querySelector(\".swiper__wrapper\");\n  this.swiperSlides = this.swiperWrapper.children;\n\n  this.btnPrev = this.swiper.querySelector(\"[data-slide='prev']\");\n  this.btnNext = this.swiper.querySelector(\"[data-slide='next']\");\n\n  this.btnPrevPressed = false;\n  this.btnNextPressed = false;\n\n  this.options = _parseOptions(options);\n\n  this.nextActiveSlideIdx = null;\n\n  [...this.swiperSlides].forEach((slide, i) => {\n    if (i === 0) {\n      slide.classList.add(\"active\");\n    }\n\n    slide.style.transitionDuration = `${this.options.speed}ms`; // eslint-disable-line no-param-reassign\n\n    slide.addEventListener(\"transitionstart\", () =>\n      _ontransitionstart(slide, this)\n    );\n    slide.addEventListener(\"transitionend\", () =>\n      _ontransitionend(slide, this)\n    );\n  });\n\n  this.btnPrev.onclick = this.slidePrev.bind(this);\n  this.btnNext.onclick = this.slideNext.bind(this);\n\n  _setAutoSlideTimeoutID(this);\n}\n\nSwiper.prototype.slidePrev = function slidePrev() {\n  if (\n    this.btnPrevPressed ||\n    this.btnNextPressed ||\n    this.swiperSlides.length <= 1\n  ) {\n    return;\n  }\n\n  this.btnPrevPressed = true;\n\n  const lastSlideIdx = this.swiperSlides.length - 1;\n\n  for (const [i, s] of Object.entries(this.swiperSlides)) {\n    if (s.classList.contains(\"active\")) {\n      const showedSlideIdx = +i === 0 ? lastSlideIdx : +i - 1;\n\n      this.swiperSlides[showedSlideIdx].classList.add(\"swiper__slide_prev\");\n      s.classList.add(\"swiper__slide_right\");\n\n      _setAutoSlideTimeoutID(this);\n\n      break;\n    }\n  }\n};\n\nSwiper.prototype.slideNext = function slideNext() {\n  if (\n    this.btnPrevPressed ||\n    this.btnNextPressed ||\n    this.swiperSlides.length <= 1\n  ) {\n    return;\n  }\n\n  this.btnNextPressed = true;\n\n  const lastSlideIdx = this.swiperSlides.length - 1;\n\n  for (const [i, s] of Object.entries(this.swiperSlides)) {\n    if (s.classList.contains(\"active\")) {\n      const showedSlideIdx = +i === lastSlideIdx ? 0 : +i + 1;\n\n      this.swiperSlides[showedSlideIdx].classList.add(\"swiper__slide_next\");\n      s.classList.add(\"swiper__slide_left\");\n\n      _setAutoSlideTimeoutID(this);\n\n      break;\n    }\n  }\n};\n\nexport default Swiper;\n","import \"../lib/swiper/swiper.less\";\nimport Swiper from \"../lib/swiper/swiper\";\n\n// eslint-disable-next-line no-unused-vars\nconst swiper = new Swiper(\".swiper\", {\n  auto: true,\n  interval: 2500,\n  speed: 800,\n});\n"],"names":["_setAutoSlideTimeoutID","context","options","auto","interval","clearTimeout","autoSlideTimeoutID","setTimeout","reverse","btnPrev","dispatchEvent","Event","btnNext","Swiper","swiperContainer","elements","document","querySelectorAll","length","map","e","Error","HTMLElement","classList","contains","this","swiper","swiperWrapper","querySelector","swiperSlides","children","btnPrevPressed","btnNextPressed","speed","_parseOptions","nextActiveSlideIdx","forEach","slide","i","add","style","transitionDuration","addEventListener","target","lastSlideIdx","idx","findIndex","_ontransitionstart","remove","_ontransitionend","onclick","slidePrev","bind","slideNext","prototype","s","Object","entries","showedSlideIdx"],"sourceRoot":""}